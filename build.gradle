plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'net.researchgate.release' version '2.4.0'
    id 'org.sonarqube' version '2.2.1'
}

apply plugin: 'maven'
apply plugin: 'osgi'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'com.github.hierynomus.license'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8


group = 'edu.amherst.acdc'
description = 'Trellis Vocabularies'

ext {
    vendor = 'Amherst College'
    homepage = 'https://www.amherst.edu'
    docURL = 'https://acdc.amherst.edu/wiki'
    license = 'Apache 2'

    /* Dependencies */
    commonsRdfVersion = '0.3.0-incubating'

    /* Testing */
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    jenaVersion = '3.1.1'
    xercesVersion = '2.11.0'

    /* OSGi */
    spiflyVersion = '1.0.8'
    projectOsgiVersion = project.version.replaceAll("-SNAPSHOT", ".SNAPSHOT")
}

configurations {
    buildToolsConfig
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-rdf-api', version: commonsRdfVersion

    testCompile group: 'org.apache.commons', name: 'commons-rdf-jena', version: commonsRdfVersion
    testCompile group: 'org.apache.jena', name: 'jena-osgi', version: jenaVersion
    testCompile group: 'junit', name: 'junit', version: junitVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testCompile group: 'xerces', name: 'xercesImpl', version: xercesVersion

    buildToolsConfig 'edu.amherst.acdc:acrepo-build-tools:0.2.0'
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

release {
    tagTemplate = '$name-$version'
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Import-Package', '*'
        instruction 'Export-Package', "edu.amherst.acdc.trellis.vocabulary;version=${projectOsgiVersion}"
    }
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar
    archives sourceJar
    archives (file('build/resources/main/features.xml')) {
        classifier 'features'
        type 'xml'
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

license {
    include "**/*.java"
    header rootProject.file('build/license/HEADER.txt')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

processResources {
    outputs.upToDateWhen { false }
    expand project.properties
}

signing {
    required { !version.endsWith("SNAPSHOT") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        def sonatypeUsername = project.hasProperty('ossrhUsername') ? ossrhUsername : ""
        def sonatypePassword = project.hasProperty('ossrhPassword') ? ossrhPassword : ""
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }

        pom.project {
            packaging 'jar'
            url 'https://acdc.amherst.edu/wiki'
            inceptionYear '2017'
            name 'Amherst College Trellis Repository Vocabularies'
            description 'The core vocabularies used in a trellis repository'

            organization {
                name project.vendor
                url project.homepage
            }

            developers {
                developer {
                    id 'acoburn'
                    name 'Aaron Coburn'
                    email 'acoburn @ (domain of organization url)'
                    organization 'Amherst College'
                    organizationUrl 'https://www.amherst.edu'
                    roles {
                        role 'developer'
                    }
                    timezone '-5'
                }
                developer {
                    id 'bseeger'
                    name 'Bethany Seeger'
                    email 'bseeger @ (domain of organization url)'
                    organization 'Amherst College'
                    organizationUrl 'https://www.amherst.edu'
                    roles {
                        role 'developer'
                    }
                    timezone '-5'
                }
            }

            scm {
                connection 'scm:git:git://github.com/acoburn/trellis-vocabulary.git'
                developerConnection 'scm:git:git@github.com/acoburn/trellis-vocabulary.git'
                url 'https://github.com/acoburn/trellis-vocabulary'
                tag 'HEAD'
            }

            licenses {
                license {
                    name 'Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                    comments 'Copyright (c) 2017 Amherst College'
                }
            }
        }
    }
}

task processBuildTools(type: Copy) {
    from {
        configurations.buildToolsConfig.collect {
            zipTree(it).matching {
                include 'checkstyle/*.xml'
                include 'license/*.txt'
            }
        }
    }
    into 'build'
}

checkstyle {
    configFile = rootProject.file('build/checkstyle/checkstyle.xml')
    configProperties.checkstyleConfigDir = rootProject.file('build/checkstyle/')
}

sonarqube {
    properties {
        property "sonar.projectName", "Amherst College Trellis Repository Vocabularies"
        property "sonar.projectKey", "edu.amherst.acdc:trellis-vocabulary"
    }
}

task docs(type: Javadoc) {
    source sourceSets.main.allJava
    classpath = files(sourceSets.main.compileClasspath)
    destinationDir = new File(projectDir, "docs/${version}")
}

checkstyleMain.dependsOn processBuildTools
afterReleaseBuild.dependsOn docs

